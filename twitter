mysql> create database twitter;
Query OK, 1 row affected (0.03 sec)

mysql> quit 

$ mysql -u root -h localhost -p twitter < sql/twitter.sql

mysql> use twitter;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql> show tables;
+-------------------+
| Tables_in_twitter |
+-------------------+
| relationships     |
| tweets            |
| users             |
+-------------------+
3 rows in set (0.00 sec)

Q1) find all users with all their followers

mysql> select users.name, followers.name as followings from users, users as followers, relationships where users.id = relationships.user_id and followers.id = relationships.following_id;
+-------+------------+
| name  | followings |
+-------+------------+
| Akhil | Manik      |
| Akhil | Amit       |
| Akhil | Kapil      |
| Akhil | Ankur      |
| Akhil | Suman      |
| John  | Ryan       |
| Ryan  | John       |
| Kapil | Akhil      |
| Kapil | Manik      |
| Kapil | Suman      |
| Ankur | Akhil      |
| Ankur | Manik      |
| Ankur | Amit       |
| Ankur | Rahul      |
| Ankur | Kapil      |
| Ankur | John       |
| Ankur | Ryan       |
| Ankur | Sunil      |
| Ankur | Suman      |
+-------+------------+
19 rows in set (0.01 sec)


Q2) All userswith their followings in descending order

mysql> select users.name, group_concat(followers.name) as followings from users, users as followers, relationships where users.id = relationships.user_id and followers.id = relationships.following_id group by users.name order by count(followers.name) desc;
+-------+----------------------------------------------------+
| name  | followings                                         |
+-------+----------------------------------------------------+
| Ankur | Akhil,Manik,Amit,Rahul,Kapil,John,Ryan,Sunil,Suman |
| Akhil | Manik,Amit,Kapil,Ankur,Suman                       |
| Kapil | Akhil,Manik,Suman                                  |
| John  | Ryan                                               |
| Ryan  | John                                               |
+-------+----------------------------------------------------+
5 rows in set (0.00 sec)


Q3) Display my timeline(user id =1)

mysql> select followers.name, tweets.content, tweets.created_at from users, users as followers, relationships, tweets where users.id =1 and ((users.id =relationships.user_id and relationships.following_id = followers.id) or (users.id = followers.id)) and followers.id = tweets.user_id group by tweets.id order by created_at desc;
+-------+-------------------------------------------------+---------------------+
| name  | content                                         | created_at          |
+-------+-------------------------------------------------+---------------------+
| Akhil | Its raining                                     | 2012-08-07 12:57:43 |
| Manik | Stop playing twitter twitter, focus on your job | 2012-08-07 12:55:46 |
| Ankur | Thanks for letting me know                      | 2012-08-07 12:54:51 |
| Ankur | Nokis is a nice mobile company                  | 2012-08-07 12:54:20 |
| Kapil | I am at vinsol                                  | 2012-08-07 12:53:59 |
| Suman | Lets test this...                               | 2012-08-07 12:53:18 |
| Akhil | lorem ipsum                                     | 2012-08-07 12:53:01 |
| Manik | Hello there                                     | 2012-08-07 12:52:46 |
| Manik | Test tweet.                                     | 2012-08-07 12:52:38 |
| Akhil | My first ever tweet.                            | 2012-08-07 12:52:11 |
+-------+-------------------------------------------------+---------------------+
10 rows in set (0.00 sec)

mysql> explain select followers.name, tweets.content, tweets.created_at from users, users as followers, relationships, tweets where users.id =1 and ((users.id =relationships.user_id and relationships.following_id = followers.id) or (users.id = followers.id)) and followers.id = tweets.user_id group by tweets.id order by created_at desc;
+----+-------------+---------------+--------+---------------+---------+---------+------------------------+------+----------------------------------------------+
| id | select_type | table         | type   | possible_keys | key     | key_len | ref                    | rows | Extra                                        |
+----+-------------+---------------+--------+---------------+---------+---------+------------------------+------+----------------------------------------------+
|  1 | SIMPLE      | users         | const  | PRIMARY       | PRIMARY | 4       | const                  |    1 | Using index; Using temporary; Using filesort |
|  1 | SIMPLE      | tweets        | ALL    | NULL          | NULL    | NULL    | NULL                   |   15 |                                              |
|  1 | SIMPLE      | followers     | eq_ref | PRIMARY       | PRIMARY | 4       | twitter.tweets.user_id |    1 |                                              |
|  1 | SIMPLE      | relationships | ALL    | NULL          | NULL    | NULL    | NULL                   |   19 | Using where; Using join buffer               |
+----+-------------+---------------+--------+---------------+---------+---------+------------------------+------+----------------------------------------------+
4 rows in set (0.00 sec)

This query is much faster than one with union.



Q4) display number of tweets by each user

mysql> select users.name, count(*) as total_tweets from users join tweets on users.id = tweets.user_id group by users.id;
+-------+--------------+
| name  | total_tweets |
+-------+--------------+
| Akhil |            3 |
| Manik |            3 |
| Rahul |            1 |
| Kapil |            1 |
| John  |            1 |
| Ryan  |            2 |
| Sunil |            1 |
| Ankur |            2 |
| Suman |            1 |
+-------+--------------+
9 rows in set (0.00 sec)


Q5) Findout all users who have not tweeted ever

mysql> select users.name from users left join tweets on users.id = tweets.user_id where tweets.id is null;
+------+
| name |
+------+
| Amit |
+------+
1 row in set (0.01 sec)


Q6) all users with their tweets who have tweeted in last one hour

mysql> select users.name, tweets.content from users join tweets on users.id = tweets.user_id where time_to_sec(timediff(now(), tweets.created_at)) < 3600;
Empty set, 15 warnings (0.00 sec)


